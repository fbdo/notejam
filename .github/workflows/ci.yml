name: Continuous Integration notejam app

on:
  push:
    branches:
      - release/*
      - hotfix/*
      - feature/*
      - develop

env:
  RELEASE_VERSION: "latest"

jobs:
  ci:
    name: Extract build tag
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      - name: Extract version from branch name (for release branches)
        if: startsWith(github.ref, 'release/')
        run: |
          BRANCH_NAME="${{ github.ref }}"
          VERSION=${BRANCH_NAME#release/}

          echo "::set-env name=RELEASE_VERSION::$VERSION"
      - name: Extract version from branch name (for hotfix branches)
        if: startsWith(github.ref, 'hotfix/')
        run: |
          BRANCH_NAME="${{ github.ref }}"
          VERSION=${BRANCH_NAME#hotfix/}

          echo "::set-env name=RELEASE_VERSION::$VERSION"
      - name: Extract version from branch name (for feature branches)
        if: startsWith(github.ref, 'feature/')
        run: |
          BRANCH_NAME="${{ github.ref }}"
          VERSION=${BRANCH_NAME#feature/}

          echo "::set-env name=RELEASE_VERSION::$VERSION"
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Test and package project
        run: mvn -f spring/pom.xml package
      - name: Build Docker image
        run: docker build -t fbdo/notejam:${{ env.RELEASE_VERSION }} spring
      - name: Publish Docker image to registry
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker push fbdo/notejam:${{ env.RELEASE_VERSION }}
